---
title: F8's way 
date: 2016/09/14 20:46:25
banner: http://kcon.knownsec.com/static/images/product/lg/wallpaper-seebug-2-lg.jpg
tags:
- f8app
- react_native
- js
- todo
categories:
- ReactNative
---
##F8app's way

####Asset Catalog Creator Free

“Remember that the reducer must be pure. Given the same arguments, it should calculate the next state and return it. No surprises. No side effects. No API calls. No mutations. Just a calculation.”

###parse server
parse api : <https://parse.com/docs/rest/guide#objects-creating-objects>
js sdk:https://parse.com/docs/js/guide#queries

* https://parse.com/docs/js/guide#objects

###plugin one by one
 * react-native-linear-gradient #nrpm link
 * react-native-code-push  learned
    
    ```
    npm install -g code-push-cli
    code-push register
    code-push app add f8app
    //第四步照github里面的 rnpm 
    code-push release-react f8app android
    #查看key,测试时默认上传staging，所以用staging的key即可测试
    code-push deployment ls f8app -k
    code-push promote f8app Staging Production 发正式的
    测试环境和正式环境代码加上配置
    react-native run-android --variant release
    ```
    it works!
   	* <https://github.com/Microsoft/react-native-code-push>
   	* <http://microsoft.github.io/code-push/>
   
 * react-native-push-notification learned
   * https://github.com/zo0r/react-native-push-notification
   * object example
   * android怎么推送消息过来的...
 * fbsdk
 * react-native-share
 * react-redux
    * action,reducer-->combine reducer(combine 的作用就是将state里面对应的部分传给对应的reducer处理  
    * 先写action 需要什么操作   定义好store 数据结构   reducer 改变state
    * <Presentational and Container Components><https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0#.xnr6ne6f8>
   * http://redux.js.org/docs/advanced/AsyncActions.html
 * redux-logger
 * InteractionManager
 * Promise
  * promise 有状态pending/resolve/reject  pending即初始化后未完成，完成后是resolve或者reject  <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise>
 * 直接require 因为加了@providesModule ,直接 require react native里面的内容  package.json 里配置了 providesModuleNodeModules  haste
 * getChildContext  先声明Type ,然后在子页面就可以通过 this.context.调用
 * store=> next => action   
 	next 是store 的参数  action 是next 的参数，这样就把next 和action 都拿出来了...坑 <http://cn.redux.js.org/docs/advanced/Middleware.html>
 	
	```
// Function id() simply returns its parameter
const id = x => x;
class Foo extends id(Object) {} 
function patchStoreToAddLogging(store) {
  let next = store.dispatch
  store.dispatch = function dispatchAndLog(action) {
    console.log('dispatching', action)
    let result = next(action)
    console.log('next state', store.getState())
    return result
  }
}
	``` 
	
 * F8TabsViwe.android.js
  * f8tab 的 getChileContext ==>给ListContainer里面 this.context.用
 * reselect ?
 * GeneralScheduleView ==> ScheduleListView ==> onScroll()/GetScrolResponder ==> ListContainer  #在ListContainer那里会将另一个scroll 恢复原位..   
  ref 可以直接 this.refs.name 读取到/声明一个_inerRef 然后赋值给this._inerRef = name 
  bind  一种直接在constructor绑定，一种是onPress={() => this.openSession(session,day)}
 * ParallaxBackground  视差背景图移动 这它都是自己写，恨服 
 * RelayRenderer..什么鬼  
 * ListContainer --> stickyHeader (filter 传入的filter)
 * F8SegmentedControl -->上面的viewpager 控制显示



 
pod 用法


###parse dashboard
###graphql

